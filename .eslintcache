[{"/Users/ulisesorozco/Desktop/Coding Projects/REACT forms and validations app/src/index.js":"1","/Users/ulisesorozco/Desktop/Coding Projects/REACT forms and validations app/src/App.js":"2","/Users/ulisesorozco/Desktop/Coding Projects/REACT forms and validations app/src/components/SimpleInput.js":"3","/Users/ulisesorozco/Desktop/Coding Projects/REACT forms and validations app/src/Custom Hooks/use-input.js":"4"},{"size":142,"mtime":1616595887000,"results":"5","hashOfConfig":"6"},{"size":168,"mtime":1616595983000,"results":"7","hashOfConfig":"6"},{"size":3319,"mtime":1644210540514,"results":"8","hashOfConfig":"6"},{"size":638,"mtime":1644210070910,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1fe083i",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/ulisesorozco/Desktop/Coding Projects/REACT forms and validations app/src/index.js",[],["20","21"],"/Users/ulisesorozco/Desktop/Coding Projects/REACT forms and validations app/src/App.js",[],"/Users/ulisesorozco/Desktop/Coding Projects/REACT forms and validations app/src/components/SimpleInput.js",["22"],"/Users/ulisesorozco/Desktop/Coding Projects/REACT forms and validations app/src/Custom Hooks/use-input.js",["23"],"import {useState} from 'react'\n\nconst useInputValidation = (validateValue) => {\n    const [enteredValue, setEnteredValue] = useState(\"\");\n    const [isTouched, setIsTouched] = useState(false);\n\n    const valueIsValid = validateValue(enteredValue);\n    const hasError = !valueIsValid && setIsTouched;\n\n    const valueChangeHandler = (event) => {\n        setEnteredValue(event.target.value);\n      };\n\n      const valueBlur = (event) => {\n        setIsTouched(true);\n      };\n\n    return {\n        value: enteredValue,\n        hasError: hasError,\n        valueChangeHandler,\n        valueBlur\n    };\n\n};\n\nexport default useInputValidation; ",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":null,"fatal":true,"severity":2,"message":"28","line":17,"column":12},{"ruleId":"29","severity":1,"message":"30","line":5,"column":12,"nodeType":"31","messageId":"32","endLine":5,"endColumn":21},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"Parsing error: Identifier 'enteredName' has already been declared.\n\n\u001b[0m \u001b[90m 15 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m   \u001b[36mconst\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     value\u001b[33m:\u001b[39m enteredName\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m     hasError\u001b[33m:\u001b[39m nameInputHasError\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 |\u001b[39m     valueChangeHandler\u001b[33m:\u001b[39m nameChanged\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 |\u001b[39m     valueBlur\u001b[33m:\u001b[39m nameBlueHandler\u001b[33m,\u001b[39m\u001b[0m","no-unused-vars","'isTouched' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]